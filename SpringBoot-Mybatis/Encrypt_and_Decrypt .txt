***************************************************************************
https://howtodoinjava.com/java/java-security/java-aes-encryption-example/
***************************************************************************
Class AES
----------------------------------------------------
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

public class AES {

	private static SecretKeySpec secretKey;
	private static byte[] key;

	public static void setKey(String myKey) {
		MessageDigest sha = null;
		try {
			key = myKey.getBytes("UTF-8");
			sha = MessageDigest.getInstance("SHA-1");
			key = sha.digest(key);
			key = Arrays.copyOf(key, 16);
			secretKey = new SecretKeySpec(key, "AES");
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
	}

	public static String encrypt(String strToEncrypt, String secret) {
		try {
			setKey(secret);
			Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
			cipher.init(Cipher.ENCRYPT_MODE, secretKey);
			return Base64.getEncoder().encodeToString(cipher.doFinal(strToEncrypt.getBytes("UTF-8")));
		} catch (Exception e) {
			System.out.println("Error while encrypting: " + e.toString());
		}
		return null;
	}

	public static String decrypt(String strToDecrypt, String secret) {
		try {
			setKey(secret);
			Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
			cipher.init(Cipher.DECRYPT_MODE, secretKey);
			return new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt)));
		} catch (Exception e) {
			System.out.println("Error while decrypting: " + e.toString());
		}
		return null;
	}
}

*****************************************************************************
Lấy đoạn mã hóa
*****************************************************************************
private String secrectKey = "Aa@123";
------------------------------------------------
System.err.println("URL: "+ AES.encrypt("jdbc:mysql://localhost:3306/webnetflix", "Aa@123"));
## PxZx3DiMe9eUJ3LZw6lf0cSFRFw+Gjz2rFMqxiZ/jOBxrPTG0Q9PEY3XleXYrT1z

System.err.println("Password: " + AES.encrypt("12345678", "Aa@123"));
## bUls2gR2pBj7zXS91ZiSpA==

System.err.println("Root: " + AES.encrypt("root", "Aa@123"));
## nhE+X0ZbDCdyXH0wADouGA==

*****************************************************************************
Application.properties
*****************************************************************************
db.datasource.url=PxZx3DiMe9eUJ3LZw6lf0cSFRFw+Gjz2rFMqxiZ/jOBxrPTG0Q9PEY3XleXYrT1z
db.datasource.username=bUls2gR2pBj7zXS91ZiSpA==
db.datasource.password=nhE+X0ZbDCdyXH0wADouGA==

*****************************************************************************
Giải mã đoạn mã hóa
*****************************************************************************
private String secrectKey = "Aa@123";
hikariConfig.setJdbcUrl(AES.decrypt(urlDB, secrectKey));
hikariConfig.setUsername(AES.decrypt(userName, secrectKey));
hikariConfig.setPassword(AES.decrypt(password, secrectKey));
